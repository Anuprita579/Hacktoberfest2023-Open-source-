// Program to implement doubly linked list in C 
#include <stdio.h>
#include <stdlib.h>
struct node{
    struct node *prev;
    int data;
    struct node *next;
};
struct node *add_at_end(struct node *head, int data){
    struct node *temp = malloc(sizeof(struct node));
    struct node *ptr = malloc(sizeof(struct node));
    temp->prev = NULL;
    temp->data = data;
    temp->next = NULL;
    
    if (head==NULL){
        head = temp;
    }
    else{
        ptr = head;
        while(ptr->next!=NULL){
            ptr = ptr->next; 
        }
        ptr->next=temp;
        temp->prev = ptr;
    }
    return head;
}
struct node *add_at_beg(struct node *head, int data){
    struct node *temp = malloc(sizeof(struct node));
    temp->prev = NULL;
    temp->data = data;
    temp->next = NULL;
    
    if(head == NULL){
        head = temp;
    }
    else{
        temp->next=head;
        head->prev = temp;
        head = temp;
    }
    return head;
}
struct node *del_at_beg(struct node *head){
    struct node *ptr = malloc(sizeof(struct node));
    int delbeg;
    if (head->next ==NULL){
        free(head);
    }
    else{
        ptr = head;
        head = head->next;
        delbeg = ptr->data;
        free(ptr);    
    }
    printf("%d is deleted", delbeg);
    
    return head;
}
struct node *del_at_end(struct node *head){
    struct node *ptr = malloc(sizeof(struct node));
    int delend;
    ptr = head;
    while(ptr->next->next!=NULL){
        ptr = ptr->next;
    }
    delend = ptr->next->data;
    free(ptr->next);
    ptr->next = NULL;
    printf("%d is deleted", delend);
    
    return head;
}
int main()
{
    struct node *head = NULL;
    struct node *ptr = malloc(sizeof(struct node));
    int ch, insend, instart;
    while(1){
        printf("\nChoose an operation : 1.Insert at end \t2.Insert at start \t3.Delete at end \t4.Delete at start \t5.Display \t6.Exit");
        scanf("%d", &ch);
        switch(ch){
            case 1://Insert at end
            printf("Enter the number to be inserted at end: ");
            scanf("%d",&insend);
            head = add_at_end(head, insend);
            break;
            case 2://Insert at start
            printf("Enter the number to be inserted at start: ");
            scanf("%d",&instart);
            head = add_at_beg(head, instart);
            break;
            case 3: //Delete at end
            head = del_at_end(head);
            break;
            case 4://Delete at start
            head = del_at_beg(head);
            break;
            case 5: //Display
            ptr = head;
            while(ptr!=NULL){
                printf("%d ", ptr->data);
                ptr = ptr->next;
            }
            break;
            case 6://Exit
            exit(0);
            break;
            default :
            printf("Enter valid choice.");
        }
    }
    return 0;
}
